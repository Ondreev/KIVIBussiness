// sheetsLoader.js
// –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω—É–∂–Ω—ã–µ –ª–∏—Å—Ç—ã –û–î–ò–ù –†–ê–ó –∏ —Ä–∞–∑–¥–∞—ë–º –≤—Å–µ–º –º–æ–¥—É–ª—è–º

(async () => {
  try {
    console.log("üìä –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets...");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if (!window.SHEETS) {
      throw new Error("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SHEETS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ config.js –∑–∞–≥—Ä—É–∂–µ–Ω.");
    }

    // –°—é–¥–∞ –ø–æ–ª–æ–∂–∏–º –Ω–∞–±–æ—Ä—ã
    window.DATASETS = {};

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
    const loadSheet = async (name, url) => {
      try {
        console.log(`üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏—Å—Ç "${name}"...`);
        const response = await fetch(url);
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const text = await response.text();
        const parsed = Papa.parse(text, { header: true });
        
        if (parsed.errors && parsed.errors.length > 0) {
          console.warn(`‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ "${name}":`, parsed.errors);
        }
        
        const data = parsed.data.filter(row => {
          // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
          return Object.values(row).some(value => value && value.trim());
        });

        console.log(`‚úÖ –õ–∏—Å—Ç "${name}" –∑–∞–≥—Ä—É–∂–µ–Ω: ${data.length} —Å—Ç—Ä–æ–∫`);
        return data;
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏—Å—Ç–∞ "${name}":`, error);
        throw error;
      }
    };

    // –°–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ —Å –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const sheetTasks = [
      { name: 'data', url: SHEETS.data, desc: '–î–∞–Ω–Ω—ã–µ' },
      { name: 'plans', url: SHEETS.plans, desc: '–ü–ª–∞–Ω—ã' },
      { name: 'records', url: SHEETS.records, desc: '–†–µ–∫–æ—Ä–¥—ã' },
      { name: 'settings', url: SHEETS.settings, desc: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' },
      { name: 'ebitda', url: SHEETS.ebitda, desc: 'EBITDA' },
      { name: 'leaders', url: SHEETS.leaders, desc: '–õ–∏–¥–µ—Ä—ã' },
    ];

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const results = await Promise.allSettled(
      sheetTasks.map(async ({ name, url, desc }) => {
        const data = await loadSheet(desc, url);
        window.DATASETS[name] = data;
        return { name, count: data.length };
      })
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const failed = results.filter(r => r.status === 'rejected');
    const succeeded = results.filter(r => r.status === 'fulfilled');

    if (failed.length > 0) {
      console.error("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª–∏—Å—Ç—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å:");
      failed.forEach((result, index) => {
        console.error(`- ${sheetTasks[index].desc}:`, result.reason);
      });
    }

    if (succeeded.length === 0) {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞");
    }

    console.log("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:");
    succeeded.forEach(result => {
      const { name, count } = result.value;
      const task = sheetTasks.find(t => t.name === name);
      console.log(`- ${task.desc}: ${count} —Å—Ç—Ä–æ–∫`);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    window.DATASETS._loadTime = new Date();
    window.DATASETS._loadedSheets = succeeded.map(r => r.value.name);

    // –°–æ–æ–±—â–∞–µ–º –≤—Å–µ–º –º–æ–¥—É–ª—è–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã
    console.log("üì¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ 'sheets-ready'");
    document.dispatchEvent(new Event('sheets-ready'));

  } catch (error) {
    console.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    const errorBlock = document.createElement('div');
    errorBlock.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: #ff4444;
      color: white;
      padding: 15px;
      border-radius: 8px;
      z-index: 1000;
      max-width: 300px;
      font-family: sans-serif;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    `;
    errorBlock.innerHTML = `
      <strong>‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</strong><br>
      <small>${error.message}</small><br>
      <button onclick="location.reload()" style="margin-top:10px;padding:5px 10px;border:none;background:white;color:#ff4444;border-radius:4px;cursor:pointer;">
        –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
      </button>
    `;
    document.body.appendChild(errorBlock);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ –¥–∞—Ç–∞—Å–µ—Ç—ã —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —Å–∫—Ä–∏–ø—Ç—ã
    window.DATASETS = {
      data: [],
      plans: [],
      records: [],
      settings: [],
      ebitda: [],
      leaders: [],
      _error: error.message,
      _loadTime: new Date()
    };
    
    // –í—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ, –Ω–æ —Å –æ—à–∏–±–∫–æ–π
    document.dispatchEvent(new Event('sheets-ready'));
  }
})();
