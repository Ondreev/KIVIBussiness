// advisor.js ‚Äî –°–æ–≤–µ—Ç–Ω–∏–∫ –¥–Ω—è (–∞–Ω–∞–ª–∏–∑ ASP, —Ç—Ä–∞—Ñ–∏–∫–∞, –∑–∞–∫—É–ø–∫–∏ –∏ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏)

(async () => {
  const dataUrl = SHEETS.data;     // –ª–∏—Å—Ç "–î–∞–Ω–Ω—ã–µ"
const ebitdaUrl = SHEETS.ebitda; // –ª–∏—Å—Ç "ebitda"

  const parse = async (url) => {
    const res = await fetch(url);
    const text = await res.text();
    return Papa.parse(text, { header: true }).data;
  };

  const clean = v => parseFloat((v || '0').toString().replace(/\s/g, '').replace(',', '.'));

  const data = await parse(dataUrl);
  const costs = await parse(ebitdaUrl);

  const today = new Date();
  const ym = today.toISOString().slice(0, 7);

  const validRows = data.filter(r => {
    return r["–î–∞—Ç–∞"]?.startsWith(ym) && clean(r["–¢–û"]) > 0 && clean(r["—Ä–∞—Å—á–µ—Ç ASP"]) > 0;
  });

  const avgRevenue = validRows.reduce((s, r) => s + clean(r["–¢–û"]), 0) / (validRows.length || 1);
  const avgAspCount = validRows.reduce((s, r) => s + clean(r["—Ä–∞—Å—á–µ—Ç ASP"]), 0) / (validRows.length || 1);
  const asp = avgAspCount ? Math.round(avgRevenue / avgAspCount) : 0;

  let totalCosts = 0;
  costs.forEach(row => {
    const value = clean(row["–ó–Ω–∞—á–µ–Ω–∏–µ"]);
    const type = (row["–¢–∏–ø"] || '').toLowerCase();
    if (type.includes("—Ä—É–±")) totalCosts += value;
    else if (type.includes("%")) totalCosts += avgRevenue * value / 100;
  });

  const ebitda = avgRevenue - totalCosts;

  // —Å–æ–≤–µ—Ç–Ω–∏–∫
  let advice = "‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è! –í—ã –º–æ–ª–æ–¥—Ü—ã!!! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫—É—Ä—Å. –ù–µ –∑–∞–±—ã–≤–∞–µ–º –ø—Ä–æ –Ω–∞—à–∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏: –£–ª—ã–±—á–∏–≤–æ—Å—Ç—å, –¥–æ–±—Ä–æ–¥—É—à–Ω—ã–π –ó–ê–ë–û–¢–õ–ò–í–´–ô —Ç–æ–Ω. –ù–∞–ø–æ–º–∏–Ω–∞–µ–º –ø—Ä–æ –ø–æ–¥–ø–∏—Å–∫—É –≤ –¢–µ–ª–µ–≥—Ä–∞–º. –ü–æ–¥–∞—Ä–∫–∏ –¥–µ–ª–∞–µ–º –æ—Ç –¥—É—à–∏, –≤ —Ä—É–∫–∏, —Å —É–ª—ã–±–∫–æ–π, —Å–º–æ—Ç—Ä—è –ø—Ä—è–º–æ –≤ –≥–ª–∞–∑–∞ –ü–æ–∫—É–ø–∞—Ç–µ–ª—é. –ù–µ –±—É–¥—å—Ç–µ –≥—Ä—É–±—ã–º–∏ –∏ —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–º–∏. –≠—Ç–æ—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä –º–æ–∂–µ—Ç —Ä–∞–∑—Ä—É—à–∏—Ç—å –¥–∏–Ω–∞–º–∏–∫—É —Ä–æ—Å—Ç–∞!";

  if (asp < 250) {
    advice = "üìä ASP —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –∞–ø—Å–µ–π–ª—ã, —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞, –∫–æ–º–ø–ª–µ–∫—Ç—ã. –ü—Ä–æ–¥–∞–µ–º –±–æ–ª—å—à–µ –∫–æ—Å—Ç—é–º–æ–≤, –∫–æ–º–ø–ª–µ–∫—Ç—ã –Ω–æ—Å–∫–æ–≤, —É—Å–∏–ª–∏–≤–∞–µ–º —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫!";
  } else if (avgRevenue < 25000) {
    advice = "üìâ –°—Ä–µ–¥–Ω—è—è –≤—ã—Ä—É—á–∫–∞ –Ω–∏–∂–µ –Ω–æ—Ä–º—ã. –£—Å–∏–ª—å—Ç–µ –ø—Ä–æ–º–æ –∏ –≤–∏–∑—É–∞–ª –≤ –∫–ª—é—á–µ–≤—ã–µ –¥–Ω–∏, –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º, —ç—Ç–æ —É–≤–µ–ª–∏—á–∏—Ç —Ç—Ä–∞—Ñ–∏–∫ –∏ —Ä–µ—à–∏—Ç –ø—Ä–æ–±–ª–µ–º—É. –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω–æ, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫. –ü–æ–º–Ω–∏–º –ø—Ä–æ –Ω–∞—à–∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏: —É–ª—ã–±–∫–∞, –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥—Ä—É–∂–µ—Å–∫–∏–π —Ç–æ–Ω. –°–ª—É—à–∞–π—Ç–µ —Å–µ–±—è, –∫–∞–∫ –≤—ã –æ–±—â–∞–µ—Ç–µ—Å—å —Å –ü–æ–∫—É–ø–∞—Ç–µ–ª—è–º–∏! –ù–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ —Ä–∞–≤–Ω–æ–¥—É—à–∏—è –∏–ª–∏ –≥—Ä—É–±–æ—Å—Ç–∏! –ê–∫—Ç–∏–≤–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–æ –Ω–∞—à–∏ –∞–∫—Ü–∏–∏ —Å –≤–æ–æ–¥—É—à–µ–≤–ª–µ–Ω–∏–µ–º –≤ –≥–æ–ª–æ—Å–µ";
  } else if (ebitda < 2000) {
    advice = "üö® EBITDA –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å % —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–ª–∏ –ø–æ–≤—ã—Å–∏—Ç—å –Ω–∞—Ü–µ–Ω–∫—É, —ç—Ç–æ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–ê–ö–¢–û–†. –°–Ω–∏–∂–∞–µ–º —Å–º–µ–Ω—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º, —É–±–∏—Ä–∞–µ–º –¥–æ–ø—Å–º–µ–Ω—ã, –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–æ—É—Ç–µ—Ä–æ–≤. –ï—Å–ª–∏ —Å–µ–π—á–∞—Å –≤—Å–µ –ø—É—Å—Ç–∏—Ç—å –Ω–∞ —Å–∞–º–æ—Ç–æ–∫, –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –ø–æ–∑–¥–Ω–æ. –ü–æ–∏–Ω—Ç–µ—Ä–µ—Å—É–π—Ç–µ—Å—å, –ø–æ—á–µ–º—É –ª—é–¥–∏ —É—Ö–æ–¥—è—Ç. –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º –û–°–û–ë–ï–ù–ù–û–ô –ó–ê–ë–û–¢–´ –æ –ø–æ—Å—Ç–µ—Ç–∏—Ç–µ–ª—è—Ö –ú–∞–≥–∞–∑–∏–Ω–∞. –ë–∏–∑–Ω–µ—Å —Ç—Ä–µ–±—É–µ—Ç —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å! –í—Å–µ —É—á—Ä–µ–¥–∏—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ SWOT-–∞–Ω–∞–ª–∏–≥. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–ª—é—á–µ–≤—É—é –ø—Ä–∏—á–∏–Ω—É –ø–∞–¥–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ –∏ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–∞–Ω –Ω–∞ PDCA –æ—Å–Ω–æ–≤—É. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Å –ò–ò. –°–æ–±–µ—Ä–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–∏–µ –∏ –æ–±—Å—É–¥–∏—Ç–µ —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!";
  }

  // —Å–æ–∑–¥–∞—ë–º –±–ª–æ–∫
  const block = document.createElement("div");
  block.style.background = "#222";
  block.style.color = "#fff";
  block.style.borderRadius = "16px";
  block.style.padding = "20px";
  block.style.marginTop = "24px";
  block.style.width = "95%";
  block.style.maxWidth = "600px";
  block.style.boxSizing = "border-box";
  block.style.fontFamily = "monospace";
  block.style.boxShadow = "0 0 16px rgba(255,255,255,0.3)";

  block.innerHTML = `
    <div style='font-size:18px;font-weight:bold;margin-bottom:12px;text-align:center;'>ü§ñ –°–æ–≤–µ—Ç–Ω–∏–∫ –¥–Ω—è</div>
    <div style='font-size:14px;text-align:center;'>${advice}</div>
  `;

  document.body.appendChild(block);
})();
