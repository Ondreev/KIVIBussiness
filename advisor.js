// advisor.js ‚Äî –°–æ–≤–µ—Ç–Ω–∏–∫ –¥–Ω—è (–∞–Ω–∞–ª–∏–∑ ASP, —Ç—Ä–∞—Ñ–∏–∫–∞, –∑–∞–∫—É–ø–∫–∏ –∏ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏)

(async () => {
  const dataUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vTM-GTiL5auNwSsi0SWkR5_YzX89K-J27vC5nw15bVJbkJRXrmXzNv4LDWb32xfVHNcYac0GnNsxJTI/pub?gid=2099900296&single=true&output=csv";
  const ebitdaUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vTM-GTiL5auNwSsi0SWkR5_YzX89K-J27vC5nw15bVJbkJRXrmXzNv4LDWb32xfVHNcYac0GnNsxJTI/pub?gid=567373639&single=true&output=csv";

  const parse = async (url) => {
    const res = await fetch(url);
    const text = await res.text();
    return Papa.parse(text, { header: true }).data;
  };

  const clean = v => parseFloat((v || '0').toString().replace(/\s/g, '').replace(',', '.'));

  const data = await parse(dataUrl);
  const costs = await parse(ebitdaUrl);

  const today = new Date();
  const ym = today.toISOString().slice(0, 7);

  const validRows = data.filter(r => {
    return r["–î–∞—Ç–∞"]?.startsWith(ym) && clean(r["–¢–û"]) > 0 && clean(r["—Ä–∞—Å—á–µ—Ç ASP"]) > 0;
  });

  const avgRevenue = validRows.reduce((s, r) => s + clean(r["–¢–û"]), 0) / (validRows.length || 1);
  const avgAspCount = validRows.reduce((s, r) => s + clean(r["—Ä–∞—Å—á–µ—Ç ASP"]), 0) / (validRows.length || 1);
  const asp = avgAspCount ? Math.round(avgRevenue / avgAspCount) : 0;

  let totalCosts = 0;
  costs.forEach(row => {
    const value = clean(row["–ó–Ω–∞—á–µ–Ω–∏–µ"]);
    const type = (row["–¢–∏–ø"] || '').toLowerCase();
    if (type.includes("—Ä—É–±")) totalCosts += value;
    else if (type.includes("%")) totalCosts += avgRevenue * value / 100;
  });

  const ebitda = avgRevenue - totalCosts;

  // —Å–æ–≤–µ—Ç–Ω–∏–∫
  let advice = "‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è! –í—ã –º–æ–ª–æ–¥—Ü—ã!!! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫—É—Ä—Å.";

  if (asp < 250) {
    advice = "üìä ASP —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –∞–ø—Å–µ–π–ª—ã, —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞, –∫–æ–º–ø–ª–µ–∫—Ç—ã.";
  } else if (avgRevenue < 30000) {
    advice = "üìâ –°—Ä–µ–¥–Ω—è—è –≤—ã—Ä—É—á–∫–∞ –Ω–∏–∂–µ –Ω–æ—Ä–º—ã. –£—Å–∏–ª—å—Ç–µ –ø—Ä–æ–º–æ –∏ –≤–∏–∑—É–∞–ª –≤ –∫–ª—é—á–µ–≤—ã–µ –¥–Ω–∏, –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º, —ç—Ç–æ —É–≤–µ–ª–∏—á–∏—Ç —Ç—Ä–∞—Ñ–∏–∫ –∏ —Ä–µ—à–∏—Ç –ø—Ä–æ–±–ª–µ–º—É. –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω–æ, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫.";
  } else if (ebitda < 0) {
    advice = "üö® EBITDA –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å % —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–ª–∏ –ø–æ–≤—ã—Å–∏—Ç—å –Ω–∞—Ü–µ–Ω–∫—É, —ç—Ç–æ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–ê–ö–¢–û–†.";
  }

  // —Å–æ–∑–¥–∞—ë–º –±–ª–æ–∫
  const block = document.createElement("div");
  block.style.background = "#222";
  block.style.color = "#fff";
  block.style.borderRadius = "16px";
  block.style.padding = "20px";
  block.style.marginTop = "24px";
  block.style.width = "95%";
  block.style.maxWidth = "600px";
  block.style.boxSizing = "border-box";
  block.style.fontFamily = "monospace";
  block.style.boxShadow = "0 0 16px rgba(255,255,255,0.3)";

  block.innerHTML = `
    <div style='font-size:18px;font-weight:bold;margin-bottom:12px;text-align:center;'>ü§ñ –°–æ–≤–µ—Ç–Ω–∏–∫ –¥–Ω—è</div>
    <div style='font-size:14px;text-align:center;'>${advice}</div>
  `;

  document.body.appendChild(block);
})();
